package com.ojas.rpo.security.rest.resources;

import java.io.IOException;

import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;

import org.json.simple.parser.ParseException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ojas.rpo.security.dao.assesmentname.AssesmentNameDao;
import com.ojas.rpo.security.entity.AssesmentName;
import com.ojas.rpo.security.entity.ExceptionMessage;
import com.ojas.rpo.security.entity.Response;

@Component
@Path("/assesmentNameResource")
public class AssesmentNameResource {

	
	@Autowired
    private AssesmentNameDao assesmentNameDao;
    
    
        @POST
        @Produces(MediaType.APPLICATION_JSON)
        @Consumes(MediaType.APPLICATION_JSON)
        public @ResponseBody  Response create(AssesmentName list){
            System.out.println("==========inside post method====RPO");
        

 

            if ( this.assesmentNameDao.save(list) == null) {
                return new Response(ExceptionMessage.DataIsNotSaved);
            }
            else
            return new Response(ExceptionMessage.StatusSuccess,list);
        }
       
    
        
        @GET
        @Produces(MediaType.APPLICATION_JSON)
        @Path("{id}")
        public  @ResponseBody  Response read(@PathParam("id") Long id) {
        
            AssesmentName list = this.assesmentNameDao.find(id);
            if (list == null) {
                return new Response(ExceptionMessage.ExcepcetdDataNotAvilable);
            }
            else
            return new Response(ExceptionMessage.StatusSuccess,list);
        }
        
        @GET
        @Path("/getAll")
        @Produces(MediaType.APPLICATION_JSON)
        public Response getAll() {
        	try {
				return new Response(assesmentNameDao.findAll());
			} catch (IOException | ParseException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				return new Response(ExceptionMessage.DataIsEmpty);
			}
        }  
        
        
        /*@POST
    	@Produces(MediaType.APPLICATION_JSON)
    	@Consumes(MediaType.APPLICATION_JSON)
    	@Path("{id}")
    	public @ResponseBody Response update(@PathParam("id") Long id, AssesmentName assesmentName) {
    		System.out.println("==========inside post method====RPO");
    		assesmentName.setId(id);
    		Response response = null;
    		if (assesmentName.getId() == null) {
    			response = new Response(ExceptionMessage.DataIsEmpty);
    			response.setRes("Invalid customer id");
    		}
    		if (this.assesmentNameDao.save(assesmentName) == null) {
    			return new Response(ExceptionMessage.DataIsNotSaved);
    		} else {
    			response = new Response(ExceptionMessage.StatusSuccess, assesmentName);
    			response.setRes("Assessment Details Updated Successfully ");
    		}

    		return response;
    	}*/
}
